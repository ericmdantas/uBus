class Bus{constructor(){this._q=[]}emit(a,b){if(!a){throw new TypeError(this._invalidTokenMessage('emit'))}for(let i=0,len=this._q.length;i<len;i++){if(this._q[i].token===a){this._q[i].cb(b);if(this._q[i].once){this._q.splice(i,1);break}}}}on(a,b){if(!a){throw new TypeError(this._invalidTokenMessage('on'))}let d=this._genId();this._q.push({_id:d,token:a,cb:b,once:!1,del:!1});return()=>{for(let i=0,len=this._q.length;i<len;i++){if(this._q[i]._id===d){this._q.splice(i,1);break}}}}once(a,b){if(!a){throw new TypeError(this._invalidTokenMessage('once'))}this._q.push({_id:this._genId(),token:a,cb:b,once:!0,del:!1})}off(...a){if(typeof a=='object'&&!!a.length){a.forEach(t=>{for(let i=0,len=this._q.length;i<len;i++){if(this._q[i].token===t){this._q[i].del=!0}}})}this._q=this._q.filter(item=>!item.del)}_invalidTokenMessage(a){return`[${a}] - Token not informed.`}_genId(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,c=>{const r=Math.random()*16|0,v=c=='x'?r:r&3|8;return v.toString(16)})}}export{Bus};